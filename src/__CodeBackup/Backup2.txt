package
{
	import jhb0b.core.CSpriteCore;
	import jhb0b.utils.MDisplayObjectContainerUtil;
	import flash.display.Sprite;
	import flash.display.DisplayObject;
	import flash.display.MovieClip;
	import flash.display.SimpleButton;
	import flash.events.MouseEvent;
	import flash.display.Loader;
	import jhb0b.utils.MStringUtil;


	public final class CFlaMain extends CSpriteCore
	{
		public function CFlaMain()
		{
			_own = this;

			MDisplayObjectContainerUtil.contLoop_io(_own, 'bect_',
				function(tcdo:DisplayObject, ti:int):Boolean
				{
					var tbt:SimpleButton = SimpleButton(tcdo);
					tbt.addEventListener(MouseEvent.CLICK, pp_bt_cl);
					return false;
				});
		}


		private var _own:Sprite;
		private var _ld:Loader;

		private function pp_bt_cl(te:MouseEvent):void
		{
			var tn:int = MStringUtil.get_lastNum(SimpleButton(te.currentTarget).name);
			p_test(tn.toString());
		}


	}
}



























package
{
    import flash.display.Loader;
    import flash.display.NativeWindow;
    import flash.display.NativeWindowInitOptions;
    import flash.display.NativeWindowRenderMode;
    import flash.display.NativeWindowSystemChrome;
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.events.InvokeEvent;
    import flash.events.MouseEvent;
    import flash.geom.Rectangle;

    import hobis.airpc.CNwndBase;
    import hobis.airpc.MNwndHelper;
    import jhb0b.utils.MLoaderUtil;



    [SWF(width="400", height="600", frameRate="30")]
    public final class CEntryPoint extends CNwndBase
    {
        protected override function ppInitOnce(evt:Event):void
        {
            super.ppInitOnce(evt);


            //MAppXmlUpdateCounter.Update(MMakeFormat.make('{#XXOP#}yyMMddhhmmssfff'));
            MNwndHelper.align_rightBottom(_nwnd, 100, 40);

            _napp.addEventListener(InvokeEvent.INVOKE, ppAppInvoke);
        }



        private function ppAppInvoke(evt:InvokeEvent):void
        {
            _nwnd.title = '[Developer Tools  ver 1.00]';


            // _loader = MLoaderUtil.createAndLoad(_own, './MainUi.swf', null,
            //     function(evt: Event):void {
            //         _itemCont = Sprite(_loader.content);

            //         var tdo:DisplayObject = _itemCont['mcRectProto'];
            //         _itemFilters = tdo.filters;
            //         _itemProto = tdo['constructor'];
            //         _itemCont.removeChild(tdo);

            //         for (var i:uint = 0, l:uint = __ItemDataArr.length; i < l; i++)
            //         {
            //             var timc:MovieClip = MovieClip(new _itemProto());
            //             _itemCont.addChild(timc);
            //             timc.filters = _itemFilters;
            //             timc.x = 10, timc.y = 10 + ((80 + 10) * i);

            //             var tid:Object = __ItemDataArr[i];
            //             MTextFieldUtil.set_text(timc, 'tf_1', tid.title);
            //             MTextFieldUtil.set_text(timc, 'tf_2', tid.text);

            //             timc.mouseChildren = false;
            //             timc.buttonMode = true;
            //             timc.addEventListener(MouseEvent.CLICK, pp_imc_click);
            //         }

            //     }
            // );

            //_loader = MProxy.load_swf(_appdf.resolvePath('MainUi.swf'));
            //trace(_loader.loaderInfo.bytes);
            //_own.addChild(_loader);
            //p_test('' + _loader);
            //p_test(_loader.toString());
            //p_test(_loader.content.toString());
            //_itemCont = Sprite(_loader.content);
            //p_test(_itemCont.toString());
            // _loader = MLoaderUtil.createAndLoad(_own, './MainUi.swf', null,
            //     function(evt: Event):void {
            //         _itemCont = Sprite(_loader.content);

            //         var tdo:DisplayObject = _itemCont['mcRectProto'];
            //         _itemFilters = tdo.filters;
            //         _itemProto = tdo['constructor'];
            //         _itemCont.removeChild(tdo);

            //         for (var i:uint = 0, l:uint = __ItemDataArr.length; i < l; i++)
            //         {
            //             var timc:MovieClip = MovieClip(new _itemProto());
            //             _itemCont.addChild(timc);
            //             timc.filters = _itemFilters;
            //             timc.x = 10, timc.y = 10 + ((80 + 10) * i);

            //             var tid:Object = __ItemDataArr[i];
            //             MTextFieldUtil.set_text(timc, 'tf_1', tid.title);
            //             MTextFieldUtil.set_text(timc, 'tf_2', tid.text);

            //             timc.mouseChildren = false;
            //             timc.buttonMode = true;
            //             timc.addEventListener(MouseEvent.CLICK, pp_imc_click);
            //         }

            //     }
            // );

        }


        private static const __ItemDataArr:Array = [
            { title: 'RegEx-Tool',          text: '정규표현식 도구' },
            { title: 'Base64String-Tool',   text: 'Base64문자열 도구' },
            { title: 'UrlString-Tool',      text: 'Url문자열 도구' }
        ];

        private var _loader:Loader;
        private var _itemCont:Sprite;
        private var _itemProto:Class;
        private var _itemFilters:Array;
        private var _itemClipArr:Array;


        private function pp_imc_click(evt:MouseEvent):void
        {
            var tnwio:NativeWindowInitOptions = new NativeWindowInitOptions();
            tnwio.renderMode = NativeWindowRenderMode.DIRECT;
            tnwio.systemChrome = NativeWindowSystemChrome.STANDARD;
            tnwio.transparent = false;
            tnwio.resizable = false;
            tnwio.maximizable = false;
            tnwio.owner = _nwnd;

            var tnw:NativeWindow = new NativeWindow(tnwio);
            tnw.bounds = new Rectangle(0, 0, 600, 500);
            tnw.activate();
            MNwndHelper.align_rightBottom(tnw, 100, 40);


            //_napp.openedWindows.
        }



    }
}


















